const express = require('express')
const app = express()
const path = require('path')
app.use(express.json())
const {open} = require('sqlite')
const sqlite3 = require('sqlite3')
const dbPath = path.join(__dirname, 'cricketTeam.db')
let db = null
const intializeDbandServer = async () => {
  try {
    db = await open({
      filename: dbPath,
      driver: sqlite3.Database,
    })
    app.listen(3000, () => {
      console.log('Server is Running at http://localhost:3000')
    })
  } catch (e) {
    console.log(`DB Error: ${e.message}`)
    process.exit(1)
  }
}
intializeDbandServer()

app.get('/players', async (request, response) => {
  const getPlayers = `
    SELECT * FROM players
    `
  const query = await db.all(getPlayers)
  response.send(query)
})
app.get('/players/:playerId', async (request, response) => {
  const {playerId} = request.params
  const getplayer = `
  SELECT * FROM player ,
  WHERE 
  playerId=${playerId};`
  const player = await db.get(getplayer)
  Response.send(player)
})

app.post('/players', async (request, response) => {
  const playerDetails = request.body
  const {playerName, jerseyNumber, role} = playerDetails
  const addplayer = `INSERT INTO
   book(playerName,jerseyNumber,role)
    VALUES
    (${playerName},'${vishal}'

    ${jerseyNumber},'${17}' ,

    ${role},'${Bowler}'
    );`

  const dbResponse = await db.run(playerDetails)
  const playerId = dbResponse.lastID
  response.send({playerId: playerId})
})

app.delete('/players/:playerId', async (request, response) => {
  const {playerId} = request.params
  const deletePlayerDetails = `DELETE FROM players WHERE playerId=${playerId};`
  await db.run(deletePlayerDetails)
  response.send('PLAYER DELETED SUCCESSFULLY')
})
